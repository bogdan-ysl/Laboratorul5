class StackEmptyException extends Exception {
    public StackEmptyException(String message) {
        super(message);
    }
}

class Stack {
    private char[] data;
    private int top;

    public Stack(int capacity) {
        data = new char[capacity];
        top = -1;
    }

    public void push(char value) {
        if (top == data.length - 1) {
            System.out.println("Stivă plină, nu se poate adăuga.");
            return;
        }
        data[++top] = value;
    }

    public char pop() throws StackEmptyException {
        if (isEmpty()) {
            throw new StackEmptyException("Stivă goală, nu se poate extrage.");
        }
        return data[top--];
    }

    public boolean isEmpty() {
        return top == -1;
    }
}

public class Main {
    public static void main(String[] args) {
        try {
            String input = "Costas Bogdan CR-221";
            Stack stack = new Stack(input.length());

            for (char c : input.toCharArray()) {
                stack.push(c);
            }

            System.out.print("Secvența inversată: ");
            while (!stack.isEmpty()) {
                System.out.print(stack.pop());
            }
        } catch (StackEmptyException e) {
            System.out.println("Eroare: " + e.getMessage());
        }
    }
}
